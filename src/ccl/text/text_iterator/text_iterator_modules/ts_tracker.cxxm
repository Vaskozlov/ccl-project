module;
#include <ccl/defines.hpp>
module ccl.text.modules:ts_tracker_impl;

import isl;
import :ts_tracker;

namespace ccl::text::modules
{
    CCL_INLINE static auto isTabOrSpace(char32_t chr) noexcept -> bool
    {
        return '\t' == chr || ' ' == chr;
    }

    auto TsTracker::next(char32_t chr) -> void
    {
        clearIfNeed();

        if (isTabOrSpace(chr)) {
            tabsAnsSpaces.push_back(isl::as<char>(chr));
        } else {
            needToClear = true;
        }
    }

    auto TsTracker::clearIfNeed() noexcept -> void
    {
        if (needToClear) {
            needToClear = false;
            tabsAnsSpaces.clear();
        }
    }
}// namespace ccl::text::modules
