name: VS2022

on:
  pull_request:
    branches: [ main ]
    paths: [ '**.c', '**.cpp', '**.h', '**.hpp' ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Windows amd64 MSVC
            os: windows-2022
            config_type: Release
            platform_type: x64
            boost-version: 1.79.0

    name: VS2022 (${{ matrix.config.config_type }} ${{ matrix.config.os }} ${{ matrix.config.platform_type }})
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50

      - name: Install dependencies
        run: |
          cd scripts/windows
          ./install.bat
          cd ../..

      - name: Cache boost
        uses: actions/cache@v3
        id: cache-boost
        with:
          path: D:/a/cerberus-project
          key: boost-${{ matrix.config.version }}

      - name: Install boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        uses: MarkusJx/install-boost@v2.3.0
        with:
          boost_version: 1.79.0
          boost_install_dir: D:/a/cerberus-project/boost-${{ matrix.config.version }}
          platform_version: 2022
          toolset: msvc
          link: shared

      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          cmake -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DBoost_INCLUDE_DIR=D:/a/cerberus-project/boost-${{ matrix.config.version }}/boost/boost/include \
          -DUSE_DYNAMIC_LIBRARY=ON -DCMAKE_BUILD_TYPE=Release -DUSE_SANITIZERS=OFF \
          -LH -G 'Visual Studio 17 2022' -A x64 -S ..
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build .

      - name: Tests
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: ctest
