name: VS2022

on:
  pull_request:
    branches: [ main ]
    paths: [ '**.c', '**.cpp', '**.h', '**.hpp' ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config_type: [ Release ]
        platform_type: [ x64 ]

    name: VS2022 (${{ matrix.config_type }} ${{ matrix.config.os }} ${{ matrix.platform_type }})
    runs-on: windows-2022
    env:
      BOOST_VERSION: 1.79.0
      BOOST_PATH: ${{github.workspace}}/boost/boost

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50

      - name: Install dependencies
        run: |
          cd scripts/windows
          ./install.bat
          cd ../..

      - name: Cache boost
        uses: actions/cache@v2
        id: cache-boost
        with:
          path: ${{github.workspace}}/boost/boost
          key: boost-${{BOOST_VERSION}}

      - name: Install boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        uses: MarkusJx/install-boost@v2.3.0
        with:
          boost_version: ${{env.BOOST_VERSION}}
          boost_install_dir: ${{env.BOOST_PATH}}
          platform_version: 2022
          toolset: msvc

      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          cmake -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake \
          -DBoost_INCLUDE_DIR=${{steps.install-boost.outputs.BOOST_ROOT}}/include \
          -DBoost_LIBRARY_DIRS=${{steps.install-boost.outputs.BOOST_ROOT}}/lib \
          -DUSE_DYNAMIC_LIBRARY=OFF -DCMAKE_BUILD_TYPE=Release -DUSE_SANITIZERS=OFF \
          -G 'Visual Studio 17 2022' -A x64 -S ..

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Tests
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: ctest
