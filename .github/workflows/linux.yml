name: Linux

on:
  pull_request:
    branches: [ main ]
    paths: [ '**.c', '**.cpp', '**.h', '**.hpp' ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build-path: [ ${{github.workspace}}/${ { github.head_ref } } ]

        config:
          - name: Linux amd64 GCC
            key: linux-gcc-amd64
            os: [ self-hosted, linux, X64 ]
            cmake_params: ''

          - name: Linux arm64 gcc
            key: linux-gcc-arm64
            os: [ self-hosted, linux, ARM64 ]
            cmake_params: ''

          - name: Linux amd64 clang
            key: linux-clang-arm64
            os: [ self-hosted, linux, X64 ]
            cmake_params: '-DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++'

          - name: Linux arm64 clang
            key: linux-clang-arm64
            os: [ self-hosted, linux, ARM64 ]
            cmake_params: '-DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++'

    name: CMake (${{ matrix.config.name }})
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache build
        uses: actions/cache@v3
        id: cache-build
        with:
          path: ${{ matrix.build-path }}/${{ matrix.config.key }}
          key: ${{ matrix.config.key }}

      - name: Create cache dir
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ matrix.config.build-path }}

      - name: Build
        run: |
          cmake ${{ matrix.config.cmake_params }} -G Ninja -B ${{ matrix.build-path }}/${{ matrix.config.key }} \
          -DCMAKE_BUILD_TYPE=Release -DSTRICT_COMPILATION=ON -DUSE_LIBCPP=OFF
          
          cmake --build ${{ matrix.build-path }}/${{ matrix.config.key }}

      - name: Test
        run: |
          cd build
          ctest
          cd ..